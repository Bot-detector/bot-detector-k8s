apiVersion: apps/v1
kind: Deployment
metadata:
  name: bd-prd-kafka
  namespace: kafka
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: bd-prd-kafka
  template:
    metadata:
      labels:
        app: bd-prd-kafka
    spec:
      containers:
        - name: kafka
          image: bitnami/kafka::3.5.0
          # securityContext:
          #   runAsUser: 0  # Set to 0 for root user
          #   runAsGroup: 0 # Set to 0 for root group
          env:
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_CFG_LISTENERS
              value: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafka-service.kafka.svc:9092,EXTERNAL://localhost:9094
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: "false"
            # this config is needed for kraft?
            - name: KAFKA_CFG_NODE_ID
              value: 0
            - name: KAFKA_CFG_PROCESS_ROLES
              value: controller,broker
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: 0@kafka:9093
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: CONTROLLER
  
          ports:
            - containerPort: 9092
              name: kafka
            - containerPort: 9093
              name: kafka-ctrl
            - containerPort: 9094
              name: kafka-external
      #     volumeMounts:
      #       - name: kafka-data-volume
      #         mountPath: /bitnami/kafka/data
      # volumes:
      #   - name: kafka-data-volume
      #     persistentVolumeClaim:
      #       claimName: kafka-data