apiVersion: apps/v1
kind: Deployment
metadata:
  name: bd-dvp-api
  namespace: bd-dvp
spec:
  selector:
    matchLabels:
      app: bd-dvp-api
  replicas: 1
  revisionHistoryLimit: 1
  template:
    metadata:
      labels:
        app: bd-dvp-api
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - mysql
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: bd-dvp-api
          image: quay.io/bot_detector/bd-core-files:f6b0ea6
          resources:
            requests:
              cpu: 500m
              memory: 200M
          ports:
            - name: dvp-api-port
              containerPort: 5000
          env:
            - name: discord_sql_uri
              valueFrom:
                secretKeyRef:
                  name: bd-dvp-api-secret
                  key: discord_sql_uri
            - name: sql_uri
              valueFrom:
                secretKeyRef:
                  name: bd-dvp-api-secret
                  key: sql_uri
            - name: token
              valueFrom:
                secretKeyRef:
                  name: bd-dvp-api-secret
                  key: token
            - name: kafka_url
              value: kafka-service.kafka.svc:9092
            - name: env
              value: DEV
          livenessProbe:
            httpGet:
              path: /
              port: dvp-api-port
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: dvp-api-port
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 3
            timeoutSeconds: 5
